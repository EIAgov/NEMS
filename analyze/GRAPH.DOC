                              Graphs of Matrices

 The fundamental bigraph of a linear program with coefficient matrix A is a
 bipartite graph with one set of nodes corresponding to the rows of A and the
 other set to the columns.  A link between row node i and column node j
 corresponds to a nonzero:  A(i,j) <> 0.  This is directed to form a digraph:

          (i)---->[j] if A(i,j) < 0  and  (i)<----[j] if A(i,j) > 0.

 This orientation convention conforms to ordinary networks, where each column
 of A is either a singleton (1 nonzero) or an oppositely signed doubleton and
 the equations are Ax = 0 (i.e., conservation of flow).  Bounds on arcs then
 correspond to bounds on activities, including slack and surplus variables.

 Here is a simple example:
                               S = P - T
                               D =     T - C

 Think of the two equations as Supply and Demand balances; and, think of the
 activities as Production, Transportation and Consumption.  Then, we have the
 Fundamental Digraph:

                         [P]-->(S)-->[T]-->(D)-->[C]

 where (i) denotes row i and [j] denotes column j.

 These induce the following projections:

                      (S)--->(D)       [P]--->[T]--->[C]
                     Row Digraph        Column Digraph

 The row digraph is the familiar network that represents flow going from
 Supply to Demand.  The column digraph represents an ordering on the flow:
 Production is input Transportation, which is input to Consumption.

        ............................................................
        : See the references given in GRAPH.REF for elaboration of :
        : theory and applications.                                 :
        :..........................................................:


 In the GRAPH DISPLAY output, arcs without heads are included to show
 outputs, and arcs without tails are included to show inputs.  These inputs
 and outputs could represent singletons, as in the above example.  The row
 digraph, for example, appears as:

                           --->[S]--->D

                          S--->[D]--->
    column predecessors...:     :     :...row successors (blank means RHS)
    (blank means RHS)           :...row node

 This shows that Supply (S) has an input in the fundamental digraph, namely
 the Production activity; and, Demand (D) has an output, namely the
 Consumption activity.

 If the Production and Consumption activities have upper and lower bounds,
 respectively, the column digraph appears as:

                                --->[P]--->T

                               P--->[T]--->C

                               T--->[C]--->
         column predecessors...:     :     :....column successors
         (blank means bound)         :          (blank means bound)
                                     :...column node

 The above graph output is the DIAGRAM option, which is the default.  You can
 also see the adjacency matrix.  For the example, the row digraph appears as:

                                  01 02
                          01 S     -  1
                          02 D        +

 The numbers on the rows simply define them for the column headings.  In this
 case, 01 means row S and 02 means row D.  The diagonal entries are - or +
 according to whether there is a tail-less arc into the row node or a
 headless arc out of it.  Row S has a diagnonal entry of - to represent the
 (exogenous) supply into it; and, row D has a diagonal entry of + to
 represent the (exogenous) demand out of it.  More generally, a non-blank
 diagonal entry represents either a non-zero right-hand side or an activity
 in the submatrix that is of only one sign with the equivalent meaning.  In
 the example, activity P generates a tail-less arc into S because it has only
 a single + entry in the coefficient matrix.  Similarly, activity C generates
 a headless arc out of D because it has only a single - entry in the
 coefficient matrix.

 The 1's off the diagnonal correspond to arcs in the row digraph from
 activities that have an opposite sign, as described above.  The 1 in the
 adjacency matrix (01,02) corresponds to S--->D from activity T.

 In addition to the DIAGRAM and MATRIX options, you can use the SYNTAX option
 (if a syntax file has been read into memory).  Try this on WOODNET, for
 example, for different graphs to see what happens.  The syntax placed in
 each row or column node is composed of the translations of only the sets in
 the domain, without the verb, prepositions, etc.

 The attributes delineate what is to be used for the projections.  Examples
 are FORM, TIME and PLACE, which are defined in the syntax file for the
 blending problem, BLENDRT.  See the primer for details and illustrations.

