* FILE: INFABP.RUL
* EXPERIMENTAL RULE FILE (INTERPRT TEST INFABP {A | B | P | file})
$IF @%%2 <> @ THEN SKIP 4
  This is an experimental rule file, entered from INTERP TEST INFABP
  You must also have set entering parameter to A, B, P or IIS file.
  Re-try with, for example, INTERP TEST INFABP A
$EXIT

$IF %STATUS(1:6) = INFEAS THEN GOTO BEGIN
%PROBLEM is feasible.
$EXIT

:BEGIN
$SET BLOCKS = 0
INCLUDE NULL.ROW
INCLUDE NULL.COL
* IF WE GET HERE THERE WERE NO NULL ROWS OR COLUMNS TO
* GIVE PROBABLE CAUSE.
 Rule = %%2
$TEXT CENTER

$IF %%2 = B THEN GOTO BLOCK
$IF %%2 = P THEN GOTO PRICE
$IF %%2 = A THEN GOTO AGGREG8
$GOTO IIS

:PRICE
 We now instantiate INFEAS.PRC.
INCLUDE INFEAS.PRC
$DEBUG SHOULD NOT GET HERE...INFEAS.PRC GOES TO EXIT ,

:BLOCK
 We now use blocking.
* THE FOLLOWING ATTEMPT USES BLOCKS
* ...SAVE THE OLD ONES (RESTORED BEFORE EXIT)
INCLUDE BLKSAVE
* TRY ROW BLOCKING
INCLUDE INFEAS.ROW
* TRY COLUMN BLOCKING
INCLUDE INFEAS.COL
* IF WE GET HERE THERE WERE NO INFEASIBLE ROWS OR COLUMNS
* TO GIVE PROBABLE CAUSE (BECAME UNWIELDY)
$GOTO STUCK

:AGGREG8
 We now instantiate INFEAS.AGG.
INCLUDE INFEAS.AGG
$GOTO EXIT

:IIS
* THE FOLLOWING ATTEMPT USES BLOCKS
* ...SAVE THE OLD ONES (RESTORED BEFORE EXIT)
INCLUDE BLKSAVE
* THE FOLLOWING READIN MUST BE HERE, NOT IN THE INCLUDE FILE.
$ANALYZE READ IIS %%2
INCLUDE INFEAS.INC
* FALL THRU MEANS IIS BLOCKS NOT PRESENT
:STUCK
Sorry, I''m stuck!

:EXIT
* RESTORE BLOCKS, IF THERE WERE ANY
$IF %%BLOCKS > 0 THEN ANALYZE BLOCK LOAD
$EXIT
