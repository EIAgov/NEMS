                  Conditional Delineation of Rows and Columns

    A "conditional" is a specification of row or column attributes.
    The syntax for a conditional specification is of the form:

                        name_mask [attribute specs]

    The name_mask is a character string to delineate rows or columns by
    their names.  A mask uses the mask character (*) as a "wild"
    character -- ie, where any character matches.  For example, the names
    ABC and AXC both match the mask, A*C.  Trailing blanks are treated
    as mask characters, so the name ABCDEF also matches the mask, A*C.

    In addition to the usual name_mask, one can specify a "sliding name
    mask."  In the usual case, the positions are fixed.  For example, the
    name ABC matches the mask A*C, but the name XABC does not.  The
    name_mask specification, A*C, says that the name must have A in
    position 1 and C in position 3.  A sliding name mask is specified by
    using the double quote (") as a special character (which can therefore
    not be in the names).  The sliding mask, "A*C, is matched by names,
    ABC, XABC and XXXAYC.  The match is based on the name matching the
    substring A*C (with * still a wild character) anywhere, not just in
    the first 3 positions.

    The general mask combines the fixed and sliding masks with the form:
    [fixed]["sliding].  If " does not appear, the mask is fixed.  If "
    is the first character, the mask is sliding.  More generally, a
    name matches if first it matches the fixed mask, then the remaining
    substring matches the sliding mask.

    Following the name_mask, there are optional attribute specifications,
    which are listed below (followed by examples).

        Attribute    Specification Syntax
        =========    ====================
        Nonzeroes    NONZERO=range
        Status       STATUS=list from {L,U,B,I}
                                       : : : :...infeasible (and basic)
                                       : : :...basic (feasible)
                                       : :...nonbasic at upper bound
                                       :...nonbasic at lower bound
        Rim value    key=range | key op key
                  ...column key from {X,L,U,C,D}
                                      : : : : :...reduced cost (D=-PA)
                                      : : : :...objective coeff.
                                      : : :...upper bound (X <= U)
                                      : :...lower bound (X >= L)
                                      :...level
                  ...row    key from {Y,L,U,C,P}
                                      : : : : :...dual price
                                      : : : :...objective coeff.
                                      : : :...upper bound (Y <= U)
                                      : :...lower bound (Y >= L)
                                      :...level (Y=AX)
                  ...op from {LT,LE,EQ,GE,GT,NE}
                              :  :  :  :  :  :...not equal to
                              :  :  :  :  :...greater than
                              :  :  :  :...greater than or equal to
                              :  :  :...equal to
                              :  :...less than or equal to
                              :...less than
    Examples of Name masks:
     Ordinary masks (fixed positions)
       *A*B      ...character 2 must be A and character 4 must be B
       ABC       ...name begins with ABC
       ***AB     ...name has AB as characters 4&5
     Sliding masks (indicated by " as first character)
      "*A*B      ...name contains a substring with A in its 2nd
                    position and B in its 4th position
      "ABC       ...name contains ABC as a substring somewhere
      "***AB     ...name contains a substring of length 5 whose
                    last 2 characters are AB
     General masks
      A"BC       ...name begins with A and contains BC after the
                    1st character
      ***"AB     ...name contains AB after the 3rd character

    Examples of Nonzero ranges (N abbreviates NONZERO)
       N=0       ...null (no nonzeroes)
       N=1       ...singletons (exactly 1 nonzero)
       N=0/1     ...either null or singleton
       N=1/5     ...between 1 to 5 nonzeroes (inclusive)
       N=1/*     ...1 or more nonzeroes (* denotes infinity)

    Examples of Status specifications (S abbreviates STATUS)
       S=B       ...Basic
       S=I       ...Infeasible
       S=L       ...Nonbasic at Lower bound
       S=U       ...Nonbasic at Upper bound
       S=LU      ...Nonbasic (at Lower or Upper bound)

    Examples of Rim value specifications
      Type 1 syntax:  key=range
        X=0     ...(column) activity level equals zero
        Y=1.    ...(row) level equals 1 (where Y=AX)
        L=-*    ...lower bound equals negative infinity
        U=*     ...upper bound equals infinity
        C=0/*   ...cost coefficient is non-negative
        D=*/-1. ...(column) reduced cost does not exceed -1.
      Type 2 syntax:  key op key
        L EQ U  ...lower bound equals upper bound
        X LT U  ...(column) level is strictly less than its upper bound
        P GT C  ...(row) price strictly greater than cost (which = 0)
        Y NE L  ...(row) level not equal to its lower bound
        D EQ C  ...(column) reduced cost equal to its input cost

    Query commands can be grouped as those that accept a row or a column
    conditional, prefaced by ROW | COL to determine which, and those
    that accept row and column conditionals (no preface).  These are as
    follows.

      Row or  column:  ADDRIM DISPLAY EXPLAIN SHOW TALLY
      Row and column:  COUNT  LIST    PICTURE

    Use HELP for query commands, and see SYNTAX.DOC.

