C               ::: FLIPMGT.FOR  8-20-95 :::
C
C Earlier dates deleted
C       6-27-95...put CTEMP='COMMAND' in FLCMND for LAHEY
C       7-05-95...Cosmetic change in FDEBUG
C       8-10-95...Removed PLEASE LOCK CAPS (CC 8-20)
C
C This file contains the following FLIP subroutines.
C
C    FLINIT.....initialize and sign-on
C    FLCMND.....parses (and executes) command
C           ...IF CHANGED, CHANGE FLCMN0 IN RBSTACKS (and SYSCM0)
C    FDEBUG.....debug, entered from FLIP, calls SYSDBG
C
      SUBROUTINE FLINIT
C     =================
      IMPLICIT INTEGER (A-U), DOUBLE PRECISION (Z)
C
C This initializes FLIP and signs-on.
C
      INCLUDE 'DCFLIP.'
      INCLUDE 'DCFLCMND.'
CITSO      INCLUDE (DCFLIP)
CITSO      INCLUDE (DCFLCMND)
CI$$INSERT DCFLIP
CI$$INSERT DCFLCMND
C
C LOCAL
      CHARACTER*128 CLIST
      CHARACTER*64  FILNAM
      LOGICAL       EXIST
      CHARACTER*48  PREFIX
      CHARACTER*4   EXTPRT,EXTDIC,EXTHLP,EXTEXC,EXTKEY,EXTINC,EXTOUT
      CHARACTER*8   STR8
      EQUIVALENCE   (STR8,PREFIX)
CIEIA      CHARACTER*32  EIAPRE
CIEIA      DATA          EIAPRE/'/CN6005.PRJ.AL.'/
C ::::::::::::::::::::::::::::: BEGIN ::::::::::::::::::::::::::::::::
C SET RESERVED FILE UNITS
         TTYIN  = 5
         TTYOUT = 6
CI$         TTYIN  = 1
CI$         TTYOUT = 1
         INPFIL = 7
         OUTFIL = 8
         HLPFIL = 9
C INCLUDE INITIALIZATION
         INCFIL = 99
         SWINCL = .FALSE.
         INPLIN = 0
C INITIAL SCREEN SETTINGS
         SCRWTH = 79
         SCRLEN = 23
C FILE NAME MAX LENGTH
         FLNLEN = 64
CXTSO         FLNLEN = 7
CICMS         FLNLEN = 8
C
C DEFAULT EXTENSIONS (PASSED TO FSET0...USER CAN CONTROL WITH _SETUP)
         EXTHLP = '.HLP'
         EXTDIC = '.DIC'
         EXTPRT = '.DOC'
         EXTEXC = '.EXC'
         EXTINC = '.INC'
         EXTKEY = '.KEY'
         EXTOUT = '.OUT'
C TSO EXTENSIONS ARE NULL
CXTSO         EXTHLP = ' '
CXTSO         EXTDIC = ' '
CXTSO         EXTPRT = ' '
CXTSO         EXTEXC = ' '
CXTSO         EXTINC = ' '
CXTSO         EXTKEY = ' '
CXTSO         EXTOUT = ' '
C CMS EXTENSIONS USE BLANK INSTEAD OF DOT
CICMS         EXTHLP = ' HLP'
CICMS         EXTDIC = ' DIC'
CICMS         EXTPRT = ' DOC'
CICMS         EXTEXC = ' EXC'
CICMS         EXTINC = ' INC'
CICMS         EXTKEY = ' KEY'
CICMS         EXTOUT = ' KEY'
C  NOTE THAT PREFIX (PATH IN DOS) IS NULL...THIS CAN BE CHANGED HERE
C  AND PASSED TO FSET0
         PREFIX = ' '
CIEIA         PREFIX = EIAPRE
C INITIALIZE FSET NUMBERS
         MXFSET = 30
C                 :.....MAX NUMBER OF FILE TYPES TO BE MANAGED BY FSET
         NFLSET = 0
C                 :.....NUMBER OF TYPES (INCREMENTED IN FSET0)
         PRELEN = 48
C                 :.....MAX LENGTH OF PREFIX (IN DCFLIP)
         SUFLEN = 4
C                 :.....MAX LENGTH OF SUFFIX (IN DCFLIP)
C
         RCODE = 0
         CALL FSET0('DICTNARY',PREFIX,EXTDIC,RCODE)
         CALL FSET0('EXECUTE ',PREFIX,EXTEXC,RCODE)
         CALL FSET0('HELP    ',PREFIX,EXTHLP,RCODE)
         CALL FSET0('INCLUDE ',PREFIX,EXTINC,RCODE)
         CALL FSET0('KEYWORD ',PREFIX,EXTKEY,RCODE)
         CALL FSET0('OUTPUT  ',PREFIX,EXTOUT,RCODE)
         CALL FSET0('PRINT   ',PREFIX,EXTPRT,RCODE)
         IF( RCODE.NE.0 )THEN
            PRINT *,' ** FATAL SYSTEM ERROR FROM FSET0...',
     1              'RCODE =', RCODE
            GOTO 1300
         ENDIF
C STRING DELIMETER AND MASK CHARACTER
         SDELIM = ''''
         MASK   = '*'
C
C VALUE INFINITY (JUST FOR FLIP, NOT FOR PARTICULAR SYSTEM LIKE ANALYZE,
C                 WHICH COULD HAVE ITS OWN)
         VINF   = 2.**30
C                 ====== < LARGEST INTEGER WO OVERFLOW
C FLIP INTRINSIC COMMANDS
        COMAND( 1) = 'EXECUTE '
        COMAND( 2) = 'HELP    '
        COMAND( 3) = 'OUTPUT  '
        COMAND( 4) = 'PRINT   '
        COMAND( 5) = 'QUIT    '
        COMAND( 6) = 'RETURN  '
        COMAND( 7) = 'SCREEN  '
        COMAND( 8) = 'STRING  '
        COMAND( 9) = 'SWITCH  '
        COMAND(10) = 'RECAP   '
        COMAND(11) = '_EJECT  '
        COMAND(12) = '_PAUSE  '
        COMAND(13) = '_SETUP  '
        COMAND(14) = '_DICTNRY'
        COMAND(15) = '_KEYWORD'
        COMAND(16) = '_TYPE'
CICMS        COMAND(17) = '!CMS  '
CIAIX        COMAND(17) = '!AIX  '
CLAHEY        COMAND(17) = '!DOS '
C NUMBER OF FLIP COMMANDS
         NCFLIP = 16
CICMS         NCFLIP=17
CIAIX         NCFLIP=17
CLAHEY         NCFLIP=17
C
C FLIP SWITCHES
         SWNAME(0)='DEBUG'
                SWVALU(0)=.FALSE.
         SWNAME(1)='ECHO_ON'
                SWVALU(1)=.FALSE.
         SWNAME(2)='ERR_STOP'
                SWVALU(2)=.TRUE.
         SWNAME(3)='MSG_ON'
                SWVALU(3)=.TRUE.
C NUMBER OF FLIP SWITCHES
         NSWTCH = 3
C
C INITIAL COMMAND IO
      INPUT = TTYIN
      OUTPUT= TTYOUT
C SYSTEM COMMANDS AND SWITCHES
      NCSYS = MAXCMD - NCFLIP
      NSWSYS= MAXSW  - NSWTCH
C
C CALL SYSTEM INITIALIZATION...
C    NCSYS = MAX NUMBER SYSTEM COMMANDS...SYSIN RETURNS ACTUAL NUMBER
C    NSWSYS= MAX NUMBER SYSTEM SWITCHES...SYSIN RETURNS ACTUAL NUMBER
C
      CALL SYSIN(SYSNAM,VERSN,NCSYS,COMAND(NCFLIP+1),NSWSYS,
     1           SWNAME(NSWTCH+1),SWVALU(NSWTCH+1))
C     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      NCMND  = NCFLIP + NCSYS
C     :        :        :...NUMBER OF SYSTEM (PROCEDURAL) COMMANDS
C     :        :....NUMBER OF FLIP COMMANDS
C     :....NUMBER OF COMMANDS (TOTAL)
C
      NSWTCH = NSWTCH + NSWSYS
      NSWSYS = NSWTCH - NSWSYS
C
C NOW NSWTCH = TOTAL NUMBER SWITCHES
C     NSWSYS = NUMBER OF FLIP SWITCHES (NSWSYS+i IS i-TH SYSTEM SWITCH)
      IF( NCSYS.LT.0 .OR. NCMND.GT.MAXCMD .OR. NSWTCH.GT.MAXSW )THEN
         PRINT *,' **SYSERR 0...NCSYS=',NCSYS,', NSWTCH=',NSWTCH
         GOTO 1300
      ENDIF
C
C  BEFORE INITIALIZING SPECIAL (KEYWORDED) FILES, LOOK FOR A
C  SETUP FILE.  THIS CAN CHANGE THE ABOVE PREFIXES/SUFFIXES.
C  (THE PROFILE CAN SETUP OTHERS THAT ARE DECLARED BY SYSIN.)
C
         FILNAM = 'SETUP'//EXTEXC
CIEIA         CALL FSLEN(EIAPRE,32,L)
CIEIA         IF( L.GT.0 )FILNAM = EIAPRE(:L)//'SETUP'//EXTEXC
         CALL FINQUR(FILNAM,IOSTAT,EXIST,*50)
         IF(EXIST)THEN
            CALL FLOPEN(INPFIL,FILNAM,'FORMATTED','OLD',*45)
C  SETUP NEW PREFIXES/SUFFIXES
40          CALL FLRDLN(CLIST,INPFIL,RCODE)
            IF(RCODE)45,41,45
C                    :  :  :....FATAL ERROR
C                    :  :.....OK
C                    :....EOF
C
41          IF(CLIST(1:1).EQ.'$')THEN
               PRINT *,' ',CLIST(2:SCRWTH)
               GOTO 40
            ENDIF
            IF(CLIST(1:7).EQ.'ENDATA ')GOTO 45
C
            FIRST = 1
            CALL FSLEN(CLIST,128,LAST)
            CALL FSETUP(CLIST,FIRST,LAST,RCODE)
            IF(RCODE.EQ.0)GOTO 40
            RCODE = 0
            PRINT *,' ** Warning: could not finish ',FILNAM
            LINE = SCRLEN + 1
            CALL FPRMPT(LINE,*50)
45          CLOSE(INPFIL,ERR=50)
         ENDIF
C
C  DICTNARY (ie, dictionary) AND HELP CAN BE CHANGED, BUT
C  PROFILE AND CREDITS ARE READ ONLY ONCE, AT BEGINNING
C
50       CONTINUE
C SHOW CREDITS, IF ANY
      FILNAM = 'CREDITS'
      CALL FSETNM('PRINT   ',FILNAM,BEGEXT,RCODE)
      IF(RCODE.NE.0)THEN
         RCODE = 0
         GOTO 100
      ENDIF
C
      CALL FINQUR(FILNAM,IOSTAT,EXIST,*100)
      IF(.NOT.EXIST)GOTO 100
C
C ...CREDITS.DOC EXISTS, SO PRINT IT
      CALL FLOPEN(HLPFIL,FILNAM,'FORMATTED','OLD',*90)
      CALL FPRINT(LINE,*90)
90    CLOSE(HLPFIL)
      PRINT *
      CALL FSLEN(FILNAM,FLNLEN,LS)
      PRINT *,' ...To see credits anytime, PRINT ',FILNAM(:LS)
C FORCE PROMPT
      LINE = SCRLEN + 1
      CALL FPRMPT(LINE,*100)
C
100   CONTINUE
C SIGNON
      DO 110 I=1,SCRLEN
110   PRINT *,' '
      CALL FCLRSC
      LINE = 0
C SEE IF THERE IS A SIGN-ON FILE
      FILNAM = 'SIGNON'
      CALL FSETNM('PRINT   ',FILNAM,BEGEXT,RCODE)
      IF(RCODE.NE.0)THEN
         RCODE = 0
         GOTO 150
      ENDIF
      CALL FINQUR(FILNAM,IOSTAT,EXIST,*100)
      IF(.NOT.EXIST)GOTO 150
C
C ...SIGNON.DOC EXISTS, SO PRINT IT
      CALL FLOPEN(HLPFIL,FILNAM,'FORMATTED','OLD',*119)
      CALL FPRINT(LINE,*119)
119   CLOSE(HLPFIL)
      GOTO 190
C
150   CONTINUE
C USE DEFAULT SIGN-ON
      CLIST = SYSNAM
      IF(VERSN.NE.' ')CLIST(9:) = '   Version '//VERSN
C
      CALL FCENTR(CLIST,I1,I2)
      PRINT *,CLIST(:I2)
C
      CLIST='by'
      CALL FCENTR(CLIST,I1,I2)
      PRINT *,CLIST(:I2)
C
      CLIST='Harvey J. Greenberg'
      CALL FCENTR(CLIST,I1,I2)
      PRINT *,CLIST(:I2)
C
190   PRINT *,' '
      CLIST=': Enter  ?  for introduction :'
      CALL FCENTR(CLIST,I1,I2)
      PRINT *,CLIST(:I2)
      CLIST=': Enter HELP to see commands :'
      CALL FCENTR(CLIST,I1,I2)
      PRINT *,CLIST(:I2)
C
      DO 200 I=I1+1,I2-1
200   CLIST(I:I)='.'
C
      PRINT *,CLIST(:I2)
      PRINT *,' '
CC 8-20      PRINT *,' PLEASE LOCK CAPS'
C INITIALIZE STRING
      CALL FSINIT
C ...ENTER STRINGS 1-9 FOR EXEC FILES...ADDED 4-28-93
      DO 300 I=1,9
         STR8 = CHRNUM(I)
         CALL FSDEF(STR8,' ',RCODE)
         IF( RCODE.NE.0 )THEN
            RCODE = 0
            GOTO 310
         ENDIF
300   CONTINUE
310   CONTINUE
C INITIALIZE RANDOM NUMBER GENERATOR
      RND0 = 0
      RND1 = 1
      CALL FRANDU(V)
      IF(V.LT.0.0 .OR. V.GT.1.0)THEN
         PRINT *,' ** SYSERR...RND',V
         GOTO 1300
      ENDIF
C
C INITIALIZE DICTIONARY
      CLIST = '*'
      RCODE = 0
      CALL FDICIN(CLIST,FIRST,LAST,RCODE)
      IF(NUMDIC.GT.0)THEN
         CLIST=' ... Enter  ? ? for help with dictionary'
         CALL FCENTR(CLIST,I1,I2)
         PRINT *,CLIST(:I2)
      ELSE
         PRINT *,' '
      ENDIF
C
C INITIALIZE KEYWORDS
      RCODE = 0
      FILNAM = '*'
      CALL FKEYIN(FILNAM,CLIST,FIRST,LAST,RCODE)
      RCODE = 0
C
C EXECUTE PROFILE (IF EXISTS)
      FILNAM = 'PROFILE'
      CALL FSETNM('EXECUTE ',FILNAM,BEGEXT,RCODE)
      IF(RCODE.EQ.0)THEN
         CALL FINQUR(FILNAM,IOSTAT,EXIST,*500)
         IF(EXIST)THEN
            CALL FLOPEN(INPFIL,FILNAM,'FORMATTED','OLD',*500)
            INPUT = INPFIL
            SWINCL = .FALSE.
            INPLIN = 0
         ENDIF
      ELSE
         RCODE = 0
      ENDIF
C
500   CONTINUE
C INITITALIZE RECAP COMMAND LIST (CRECAP)...NRECAP SET IN DCFLCMND
      DO 600 I=1,NRECAP
600   CRECAP(I) = ' '
C
C DONE
      RETURN
C
1300  CONTINUE
      PRINT *,' ** SYSTEM INITIALIZATION ERROR...MUST ABORT'
      STOP
C
C ** FLINIT ENDS HERE
      END
      SUBROUTINE FLCMND(CLIST,FIRST,LAST,RCODE)
C     =================
      IMPLICIT INTEGER (A-U), DOUBLE PRECISION (Z)
C   .........................................................
C   : MUST CHANGE FLCMN0 IN RBSTACKS.FOR IF THIS IS CHANGED :
C   :.......................................................:
C
C Parses CLIST(FIRST:LAST) for command and executes it.
C
C If RCODE <> 0 UPON ENTRANCE, ERROR ACTION IS TAKEN (NO PARSE).
C
      INCLUDE 'DCFLIP.'
      INCLUDE 'DCFLCMND.'
CITSO      INCLUDE (DCFLIP)
CITSO      INCLUDE (DCFLCMND)
CI$$INSERT DCFLIP
CI$$INSERT DCFLCMND
C
      PARAMETER   (UABORT=10)
C                         :...RETURN CODE FOR USER ABORT (_PAUSE)
C LOCAL
      CHARACTER*128 CLIST,CTEMP
      CHARACTER*64  FILNAM
      CHARACTER*32  STRVAL
      CHARACTER*1   CHAR,DELMTR
      CHARACTER*8   OPLIST(4),TOKEN
      LOGICAL*1     SW
      LOGICAL       EXIST
C
CITSO      REAL*8 ERR212,ERR219
CICMS      REAL*8 ERR215
CITSO      CALL ERRSAV(212,ERR212)
CITSO      CALL ERRSET(212,1099,-1,1,1)
CICMS      CALL ERRSAV(215,ERR215)
CICMS      CALL ERRSET(215,1099,-1,1,1)
CITSO      CALL ERRSAV(219,ERR219)
CITSO      CALL ERRSET(219,1099,-1,1,1)
C ::::::::::::::::::::::::::::: BEGIN ::::::::::::::::::::::::::::::::
C DOES CALLER JUST WANT ERROR ACTION
      IF(RCODE)900,100,1000
100   CONTINUE
C NO...BEGIN PARSE
      CALL FTOKEN(CLIST,FIRST,LAST,TOKEN,8,DELMTR)
      C=0
C    :::LOOP OVER COMMANDS TO GET MATCH:::
      DO 700 I=1,NCMND
         CALL FMATCH(TOKEN,COMAND(I),' ',SW)
         IF(.NOT.SW)GOTO 700
C THIS COMMAND MATCHES
         IF(C.GT.0)THEN
            PRINT *,' ** ',TOKEN,' ambiguous...could be ',COMAND(C),
     1              ' or ',COMAND(I)
            GOTO 1000
         ENDIF
         C = I
700   CONTINUE
      IF(C.EQ.0)THEN
         PRINT *,' ** Command ',TOKEN,' not recognized'
         RCODE = 1
         GOTO 1000
      ENDIF
C
C         BRANCH ON COMMAND (C)
C         ~~~~~~~~~~~~~~~~~
      IF(C.GT.NCFLIP)THEN
C  SAVE FOR RECAP
         DO 760 I=2,NRECAP
760      CRECAP(I-1) = CRECAP(I)
         CRECAP(NRECAP)(2:) = CLIST(2:)
C  ADJUST COMMAND NUMBER FOR SYSTEM
         CMD = C - NCFLIP
         CALL SYSCMD(CMD,SWVALU,NSWSYS,CLIST,FIRST,LAST,RCODE)
C        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C BRANCH ON RETURN CODE (RCODE)
C ...RCODE = 0...ALL IS WELL
C          < 0...SYNTAX ERROR
C          > 0...OTHER ERROR
         IF(RCODE)900,1099,1000
      ENDIF
C
C   BRANCH ON FLIP COMMAND (SESSION CONTROL)
C   ======================
C           1    2    3    4    5    6    7    8    9
      GOTO(1100,1600,1500,1900,1300,1700,1800,1400,1200,
C           10   11   12   13   14   15   16
     1     2000,3000,3100,3200,4000,5000,6000,
     9     9000),C
C          ____ !CMS IS LAST COMMAND (IF IN CMS ENVIRONMENT)
C               !AIX IS LAST COMMAND (IF IN AIX ENVIRONMENT)
C               !DOS IS LAST COMMAND (IF IN DOS ENVIRONMENT)
C   =======================================================
900   CONTINUE
C SYNTAX ERROR
CC REMOVED 7-5-95      IF( SWERR ) PRINT *,' ** SYNTAX ERROR'
C FALL THRU TO CLOSE FILES
C
1000  CONTINUE
      IF( SWERR )THEN
C ERR_STOP SWITCH = TRUE ===> ABORT
         IF(INPUT.EQ.INPFIL)THEN
            CLOSE(UNIT=INPFIL)
            INPUT  = TTYIN
            INPLIN = 0
            IF( SWMSG ) PRINT *,'...back to terminal input'
         ENDIF
         IF(OUTPUT.EQ.OUTFIL)THEN
            CLOSE(UNIT=OUTFIL)
            OUTPUT = TTYOUT
            IF( SWMSG ) PRINT *,'...back to terminal output'
         ENDIF
      ENDIF
1099  RETURN
C       ========================
C       SESSION CONTROL COMMANDS
C       ========================
1100  CONTINUE
C
C EXECUTE filename  [n] [//strings]
C =======
      CALL FLEXEC(CLIST,FIRST,LAST,RCODE)
      IF(RCODE)900,1099,1000
C
C SWITCH [swname [= setting] [...]]
C ======
1200  CONTINUE
      IF(FIRST.GT.LAST)THEN
C LIST SWITCHES
         WRITE(OUTPUT,1201,ERR=1000)(SWNAME(I),SWVALU(I),I=1,NSWTCH)
1201     FORMAT(6(3X,A8,'=',L1))
      ELSE
C CHANGE SWITCH(ES)
1250     NUMBER = NSWTCH
         CALL FTOKEN(CLIST,FIRST,LAST,TOKEN,8,CHAR)
         F = 1
         L = 8
         CALL FOPTN(TOKEN,F,L,SWNAME(1),NUMBER,RCODE)
         IF( RCODE.NE.0 )GOTO 900
         IF( NUMBER.EQ.0 )RETURN
         IF( CHAR.EQ.'=' )THEN
C ABSOLUTE SETTING (TRUE|FALSE)
            OPLIST(1) = 'TRUE'
            OPLIST(2) = 'FALSE'
            N = 2
            RCODE = -1
            CALL FOPTN(CLIST,FIRST,LAST,OPLIST,N,RCODE)
            IF( RCODE.NE.0 )GOTO 900
            SWVALU(NUMBER) = N.EQ.1
         ELSE
C TOGGLE
            SWVALU(NUMBER) = .NOT.SWVALU(NUMBER)
         ENDIF
         GOTO 1250
      ENDIF
      RETURN
C
C QUIT
C ====
1300  PRINT *,' Terminating ',SYSNAM
CITSO      CALL ERRSTR(212,ERR212)
CICMS      CALL ERRSTR(215,ERR215)
CITSO      CALL ERRSTR(219,ERR219)
      STOP
C IO ERRORS
1350  PRINT *,' ** IO ERROR'
      GOTO 1000
C
C STRING [{INCREMNT | name [= value]}]
C ======
1400  CONTINUE
      CALL FSTRNG(CLIST,FIRST,LAST,RCODE)
      IF(RCODE)900,1099,1000
C
C OUTPUT filename | *
C ======
1500  CONTINUE
      CALL FTOKEN(CLIST,FIRST,LAST,FILNAM,64,DELMTR)
      IF( FILNAM.EQ.' ' )THEN
         PRINT*,' ** MISSING FILENAME'
         GOTO 1000
      ENDIF
C
      IF( OUTPUT.EQ.OUTFIL )CLOSE(UNIT=OUTFIL)
      IF( FILNAM(1:1).EQ.'*' )THEN
         OUTPUT = TTYOUT
         RETURN
      ENDIF
C
C GET SETUP'S PREFIX AND SUFFIX
      CALL FSETNM('OUTPUT',FILNAM,BEGEXT,RCODE)
      IF( RCODE.NE.0 )GOTO 1000
      CALL FILOUT(FILNAM,RCODE)
      IF( RCODE.NE.0 )GOTO 1000
C
      CALL FLOPEN(OUTFIL,FILNAM,'FORMATTED','UNKNOWN',*1000)
      OUTPUT = OUTFIL
      RETURN
C
C PRINT filename
C =====
C  GET FILE
1900  CALL FILEIN(CLIST,FIRST,LAST,'PRINT   ',FILNAM,RCODE)
      IF(RCODE.NE.0)GOTO 1000
      CALL FLOPEN(HLPFIL,FILNAM,'FORMATTED','OLD',*1000)
      LINE = 0
      CALL FPRINT(LINE,*1099)
      RETURN
C
C HELP [command_mask]
C ====
1600  CONTINUE
C SEE IF COMMAND MASK SPECIFIED
      CALL FTOKEN(CLIST,FIRST,LAST,TOKEN,8,DELMTR)
      IF(TOKEN.EQ.' ')THEN
C JUST SHOW COMMANDS
         WRITE(OUTPUT,1611)SYSNAM,NCFLIP
1611     FORMAT(10X,A8,' has ',I3,' session control commands:')
         WRITE(OUTPUT,1612)(COMAND(I),I=1,NCFLIP)
1612     FORMAT((5X,6(1X,A8)))
C WRITE SYSTEM COMMANDS (UNLESS THERE ARE NONE--IE, FLIPSYS)
         IF(NCSYS.GT.0)THEN
             WRITE(OUTPUT,1615)NCSYS
1615         FORMAT(10X,'and ',I3,' procedural commands:')
             I1=NCFLIP+1
             WRITE(OUTPUT,1612)(COMAND(I),I=I1,NCMND)
         ENDIF
         WRITE(OUTPUT,1619)
1619     FORMAT(/5X,'Enter HELP * to get help for each command')
         RETURN
      ENDIF
C
C COMMAND MASK SPECIFIED
C
      LINE = 1
      DO 1690 C=1,NCMND
          CALL FMATCH(TOKEN,COMAND(C),MASK,SW)
          IF(.NOT.SW)GOTO 1690
C
          IF(OUTPUT.EQ.TTYOUT)THEN
C OUTPUT = TERMINAL...CENTER COMMAND
             CLIST = COMAND(C)//' command'
             CALL FCENTR(CLIST,FIRST,LAST)
          ELSE
C OUTPUT = FILE...RIGHT JUSTIFY (FOR DOCUMENTATION)
             LAST = SCRWTH - 1
             CLIST = ' '
             CLIST(LAST-16:) = COMAND(C)
          ENDIF
C
          LINE = LINE + 1
          CALL FPRMPT(LINE,*1099)
          RCODE=0
C
C NOTE ON OUTPUT:
C
C  WITH OUTPUT=TTYOUT, WE FIRST PRINT COMMAND CENTERED, THUS ADDING
C  1 TO LINE COUNT BEFORE PROMPTING
C
C  WITH OUTPUT=file, WE WANT TO BEGIN ON NEW PAGE.  THIS HAPPENS IN FPRINT
C  AUTOMATICALLY DUE TO THE FACT THAT WE ARE PRINTING FROM THE .HLP FILE
C  TO OUTPUT (SEE FPRINT IN FLFILES).  IN ADDITION, WE SKIP 2 LINES BEFORE
C  PRINTING THE COMMAND RIGHT-JUSTIFIED, THEN ANOTHER LINE (LINE COUNT
C  DOES NOT MATTER WHEN PRINTING TO A FILE -- NO PROMPTING).
C
C  THE FORMAT LENGTHS ALSO DIFFER (128 FOR TERMINAL, 79 FOR FILE).
C
          IF( OUTPUT.EQ.TTYOUT )THEN
             WRITE(OUTPUT,'(128A1)')(CLIST(I:I),I=1,LAST)
          ELSE
             WRITE(OUTPUT,'(//79A1/)')(CLIST(I:I),I=1,LAST)
          ENDIF
C
C PRINT HLP FILE
C
          LENGTH = 8
CXTSO          LENGTH = 7
          CALL FSLEN(COMAND(C),LENGTH,LAST)
          FILNAM = COMAND(C)(:LAST)
          CALL FSETNM('HELP  ',FILNAM,BEGEXT,RCODE)
          RCODE = 0
C
          CALL FINQUR(FILNAM,IOSTAT,EXIST,*1690)
          IF(EXIST)THEN
              CALL FLOPEN(HLPFIL,FILNAM,'FORMATTED','UNKNOWN',*1613)
              CALL FPRINT(LINE,*1699)
              CLOSE(UNIT=HLPFIL)
              GOTO 1690
          ENDIF
1613      PRINT *,' No help available for ',COMAND(C)
1690  CONTINUE
C
      RETURN
C
1699  CLOSE(UNIT=HLPFIL)
      RETURN
C
C
C RETURN (OR EOF ON EXECUTE FILE)
C ======
1700  CONTINUE
      CLOSE(UNIT=INPFIL)
      IF(EXENUM.LE.0)THEN
C EXECUTE TERMINATES
         SW = LAST.GE.FIRST
         IF(SW)THEN
            CALL FTOKEN(CLIST,FIRST,LAST,TOKEN,8,DELMTR)
            CALL FMATCH(TOKEN,'QUIETLY',' ',SW)
         ENDIF
         IF(.NOT.SW .AND. SWMSG) PRINT *,' RETURN...back to terminal'
         INPUT  = TTYIN
         INPLIN = 0
      ELSE
C LOOP...OPEN EXECUTE FILE
         CALL FLOPEN(INPFIL,EXEFIL,'FORMATTED','OLD',*1000)
         EXENUM = EXENUM-1
      ENDIF
      RETURN
C
C SCREEN [WIDTH=value] [LENGTH=value]
C ======
1800  CONTINUE
C (RCODE=0 MEANS OPTIONS NOT MANDATORY)
      OPLIST(1)='WIDTH'
      OPLIST(2)='LENGTH'
      SW = .TRUE.
1810  NUMBER=2
      CALL FOPTN(CLIST,FIRST,LAST,OPLIST,NUMBER,RCODE)
      IF(RCODE.NE.0)GOTO 1000
      IF(NUMBER.EQ.0)THEN
         IF(SW)PRINT *,' Screen WIDTH=',SCRWTH,' LENGTH=',SCRLEN
         RETURN
      ENDIF
      SW = SWMSG
C GET VALUE OF SETTING
      CALL FTOKEN(CLIST,FIRST,LAST,STRVAL,32,DELMTR)
      IF(STRVAL.EQ.'*')THEN
         SETVAL=32000
      ELSE
         CALL FC2R(STRVAL,V,RCODE)
         IF(RCODE.NE.0)GOTO 900
         IF(V.GT.32000)THEN
             SETVAL=32000
         ELSE
             SETVAL=V+.0001
         ENDIF
      ENDIF
      IF(NUMBER.EQ.1)THEN
         IF(SETVAL.LT.20.OR.SETVAL.GT.127)THEN
             PRINT *,' ** SCREEN WIDTH MUST BE 21 TO 127'
             GOTO 1000
         ENDIF
C SET WIDTH
         SCRWTH=SETVAL
      ELSE
C SET LENGTH
         SCRLEN=SETVAL
      ENDIF
C REPEAT BECAUSE THERE MAY BE ANOTHER SETTING
      GOTO 1810
C
2000  CONTINUE
C RECAP
      CLIST = ' Recap of '//SYSNAM
      CALL FSLEN(CLIST,80,LAST)
      CLIST(LAST+2:) = 'Commands'
      LAST = LAST + 10
      WRITE(OUTPUT,2001,ERR=1350)(CLIST(K:K),K=1,LAST)
2001  FORMAT(1X,127A1)
      DO 2050 I=1,NRECAP
         CLIST = CRECAP(I)
         IF(CLIST.EQ.' ')GOTO 2050
         CALL FSLEN(CLIST,128,LAST)
         IF(LAST.GT.SCRWTH)THEN
            LAST = SCRWTH
            CLIST(LAST-3:) = ' ...'
         ENDIF
         WRITE(OUTPUT,2001,ERR=1350)(CLIST(K:K),K=1,LAST)
2050  CONTINUE
C
      RETURN
C
3000  CONTINUE
C _EJECT [condition]
      CALL FEJECT(CLIST,FIRST,LAST,LINE,RCODE)
      IF(RCODE)900,1099,1000
C
3100  CONTINUE
C _PAUSE [remark]
      CTEMP = CLIST(FIRST:)
C CLEAR TEXT BUFFER AND PROMPT
      CALL FSLEN(CTEMP,90,LAST)
      IF(LAST.GT.SCRWTH)THEN
         PRINT *,' ',CTEMP(:SCRWTH-1)
         LAST = 0
      ENDIF
      CTEMP(LAST+1:) = '...Continue (Y/N)?'
      CALL FSLEN(CTEMP,90,LAST)
      PRINT *,' ',CTEMP(:LAST)
C OK, NOW FIND OUT IF USER WANTS TO CONTINUE
      CALL FGTCHR('YN','Y',CHAR)
      IF(CHAR.EQ.'N' .OR. CHAR.EQ.' ')THEN
C ABORT...LET CALLER KNOW WITH RETURN CODE
         RCODE = UABORT
         GOTO 1000
      ENDIF
C CONTINUE, BUT WE CAN INITIALIZE LINE COUNT FOR COMMENT PROMPT
      LINE = 0
CIEIA      CALL FCLRSC
      RETURN
C
3200  CONTINUE
C _SETUP
      CALL FSETUP(CLIST,FIRST,LAST,RCODE)
      IF(RCODE)900,1099,1000
C
4000  CONTINUE
C _DICTNRY {LOAD CLEAR MERGE} filename
      CALL FDICIN(CLIST,FIRST,LAST,RCODE)
      RETURN
C
5000  CONTINUE
C _KEYWORD [CLEAR {LOAD|MERGE filename} SET key [= value] [...]]
      CALL FLKEYW(CLIST,FIRST,LAST,SWMSG,RCODE)
      RETURN
C
6000  CONTINUE
C _TYPE text [//justify]
      CALL FLOOK(CLIST,FIRST,LAST,'//',JUSTFY)
      IF(JUSTFY.GT.0)THEN
C   JUSTIFY OPTION
         F = JUSTFY+2
         OPLIST(1) = 'LEFT'
         OPLIST(2) = 'RIGHT'
         OPLIST(3) = 'CENTER'
         NUMBER = 3
         RCODE = -1
         CALL FOPTN(CLIST,F,LAST,OPLIST,NUMBER,RCODE)
         IF(RCODE.NE.0)RETURN
         LAST = JUSTFY-1
         IF(NUMBER-2)6010,6020,6030
6010     CONTINUE
C   LEFT JUSTIFY (REMOVE LEADING BLANKS)
          IF(CLIST(FIRST:FIRST).EQ.' ')THEN
             IF(FIRST.GE.LAST)THEN
                FIRST = LAST
             ELSE
                FIRST = FIRST+1
                GOTO 6010
             ENDIF
          ENDIF
          GOTO 6090
6020     CONTINUE
C    RIGHT JUSTIFY
          CTEMP = CLIST(FIRST:LAST)
          CLIST = ' '
          CALL FSLEN(CTEMP,128,LAST)
          IF(LAST.LT.SCRWTH-1)THEN
             CLIST(SCRWTH-LAST-1:) = CTEMP
          ELSE
             CLIST = CTEMP
          ENDIF
          FIRST = 1
          LAST = SCRWTH-1
          GOTO 6090
6030     CONTINUE
C    CENTER
         CTEMP = CLIST(FIRST:LAST)
         CLIST = CTEMP
         CALL FCENTR(CLIST,FIRST,LAST)
         FIRST = 1
      ELSE
C   NO JUSTIFY OPTION...BACKUP TO INCLUDE LEADING BLANKS
6050     FIRST = FIRST-1
         IF(CLIST(FIRST:FIRST).EQ.' ')GOTO 6050
         FIRST = FIRST+1
C        :...NOW POSITIONED JUST AFTER FIRST BLANK (FOLLOWING _TYPE)
      ENDIF
C OK, NOW TYPE TEXT...IN CLIST(FIRST:LAST)
6090  WRITE(OUTPUT,6001)(CLIST(I:I),I=FIRST,LAST)
6001  FORMAT(1X,127A1)
C               :....CHANGED 3-29-93 FROM 80A1
      RETURN
C
9000  CONTINUE
C !CMS, !AIX OR !DOS COMMAND
C ===   ====    ====
      CTEMP = CLIST(FIRST:)
CICMS      RCODE = 0
CICMS      CALL FVMCMD(CTEMP,RCODE)
CICMS      IF(SWMSG .OR. RCODE.NE.0)THEN
CICMS         CALL FSLEN(CTEMP,128,LAST)
CICMS         CTEMP(LAST+2:) = 'ISSUED WITH RCODE='
CICMS         STRVAL = ' '
CICMS         CALL FI2C(STRVAL,RCODE,FIRST)
CICMS         CALL FSLEN(CTEMP,128,LAST)
CICMS         CTEMP(LAST+2:) = STRVAL
CICMS         CALL FSLEN(CTEMP,128,LAST)
CICMS         PRINT *,' ',CTEMP(:LAST)
CICMS      ENDIF
CLAHEY       PRINT *,' '
CLAHEY       IF( CTEMP.EQ.' ' )CTEMP = 'COMMAND'
CLAHEY       CALL SYSTEM(CTEMP)
CIAIX       PRINT *,' '
CIAIX       CALL SYSTEM(CTEMP)
C
      RETURN
C
C ** FLCMND ENDS HERE
      END
      SUBROUTINE FDEBUG
C     =================
      IMPLICIT INTEGER (A-U), DOUBLE PRECISION (Z)
C
C Debug (entered from FLIP)
C
      INCLUDE 'DCFLIP.'
      INCLUDE 'DCFLCMND.'
CITSO      INCLUDE (DCFLIP)
CITSO      INCLUDE (DCFLCMND)
CI$$INSERT DCFLIP
CI$$INSERT DCFLCMND
C
C LOCAL
      CHARACTER*1  CHAR
      CHARACTER*64 FILNAM
C ::::::::::::::::::::::::::::: BEGIN ::::::::::::::::::::::::::::::::
      IF(FLPAUS.LT.0)READ(*,1)CHAR
1     FORMAT(A1)
      PRINT *,' VERSN = 6/27-',VERSN
      FLPAUS = FPAUS0
10    PRINT *,' Enter  Flip, System, Debug '
      READ(*,1)CHAR
      IF( CHAR.EQ.' ' )RETURN
C
      IF( CHAR.EQ.'F' )GOTO 100
      IF( CHAR.EQ.'S' )THEN
         CALL SYSDBG
      ELSE IF( CHAR.EQ.'D' )THEN
         PRINT *, ' SWFDBG=',SWFDBG
         CALL FPAUSE(FPAUS0)
         SWFDBG = FPAUS0.GT.0
         IF(SWFDBG)FLPAUS = FPAUS0
         SWVALU(0) = SWFDBG
         PRINT *,' NOW SWFDBG=',SWFDBG,' ...FPAUS0=',FPAUS0
      ELSE
         PRINT *,' ?',CHAR
      ENDIF
      GOTO 10
C
100   CONTINUE
      PRINT *,' Files, Dictionary, Keywords, Strings, sWitches'
      LINE=2
      READ(*,1)CHAR
      IF( CHAR.EQ.'F' )THEN
         WRITE(*,11)TTYIN,TTYOUT,INPFIL,OUTFIL,HLPFIL,INPUT,OUTPUT,
     1              INCFIL,INPLIN,FLNLEN,SWINCL
11       FORMAT(' Files:',T10,'TTYIN =',I3,T25,'TTYOUT=',I3,
     1                    T40,'INPFIL=',I3,T55,'OUTFIL=',I3
     2          /         T10,'HLPFIL=',I3,T25,'INPUT =',I3,
     3                    T40,'OUTPUT=',I3,T55,'INCFIL=',I3
     4          /         T10,'INPLIN=',I3,T25,'FLNLEN=',I3,
     5                    T40,'SWINCL=',L1)
         PRINT *,' ...',NFLSET,' FILE TYPES...CONTINUE (Y/N)? '
         READ(*,1)CHAR
         IF( CHAR.EQ.'N' )RETURN
         LINE = 0
         DO 150 I=1,NFLSET
            CALL FPRMPT(LINE,*9000)
            CALL FPRMPT(LINE,*9000)
            FILNAM = 'fn'
            CALL FSETNM(SETKEY(I),FILNAM,BEGEXT,RCODE)
            PRINT *,' ',SETKEY(I),':',FILNAM
            FILNAM = ' '
            FILNAM(BEGEXT:) = 'X'
            PRINT *,'          ',FILNAM
150      CONTINUE
      ELSE IF(CHAR.EQ.'D')THEN
         PRINT *,NUMDIC,' entries'
         LINE = LINE+1
         DO 200 I=1,NUMDIC
            CALL FPRMPT(LINE,*9000)
            PRINT *,' ',DICKEY(I)(:16),' ',DICTXT(I)(:60)
200      CONTINUE
      ELSE IF(CHAR.EQ.'K')THEN
         CALL FKDEBG
      ELSE IF(CHAR.EQ.'S')THEN
         PRINT *,' ASCII:',(ASCII(I),I=0,35)
         LINE = LINE+1
         PRINT *,NUMSTR,' strings'
         DO 400 I=1,NUMSTR
            CALL FPRMPT(LINE,*9000)
            PRINT *,I,': ',SNAME(I),'=',SVALUE(I)
400      CONTINUE
      ELSE IF(CHAR.EQ.'W')THEN
         PRINT *,NSWTCH,' switches'
         DO 500 I=1,NSWTCH
            CALL FPRMPT(LINE,*9000)
            PRINT *,I,': ',SWNAME(I),'=',SWVALU(I)
500      CONTINUE
      ELSE IF(CHAR.EQ.' ')THEN
         GOTO 10
      ELSE
         PRINT *,' ?',CHAR
      ENDIF
      GOTO 100
C     ========
C
9000  RETURN
C
C ** FDEBUG ENDS HERE
      END
