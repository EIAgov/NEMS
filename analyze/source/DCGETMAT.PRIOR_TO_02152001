C                 ::: DCGETMAT  3-24-95 :::
C
C Earlier dates deleted
C       2-28-95...Using estimated in terms of # rows and cols
C
C This file contains data declarations and COMMON blocks for GETMAT
C ...It must be edited (see INSTALL.DOC) before compiling.
C
C       NAMERC  holds row/column names (fixed, but may be up 16 chars each)
C       INDEX   holds indexes, pointers and stats
C       VALUE   holds (real) values...pool is first
C
C See GETDATA.DOC for documentation of data structure.
C
C ........................................................................
C : NOTE: This conflicts with DCANAL, so they must not be used together. :
C :......................................................................:
C
C                   HERE IS WHERE DIMENSIONS ARE SET
C                   ================================
C               PMXNAM = LENGTH OF NAMERC ARRAY (BYTES)
C               PMXIND = LENGTH OF INDEX ARRAY  (WORDS)
C               PMXVAL = LENGTH OF VALUE ARRAY  (WORDS)
C
C USING QUICK ESTIMATE (SEE GETDATA.DOC):
C       PMXNAM = L*(R+C), PMXIND = 25R + 16C, PMXVAL = 40R + 4C
C (R=ROWS, C=COLS, L=NAME LENGTH (8-16)).
C ========================================================================
CLAHEY        PARAMETER (PMXR=2 000, PMXC= 8 000, PMXL= 8)
CBIGDOS       PARAMETER (PMXR=5 000, PMXC=25 000, PMXL=10)
Cdefaul         PARAMETER (PMXR=8 000, PMXC=50 000, PMXL=16)
         PARAMETER (PMXR=15 000, PMXC=140 000, PMXL=16)
CIEIA         PARAMETER (PMXR=9 000, PMXC=90 000, PMXL=16)
CI$           PARAMETER (PMXR=5 000, PMXC=30 000, PMXL= 8)
CITSO         PARAMETER (PMXR=8 000, PMXC=30 000, PMXL= 8)
CICMS         PARAMETER (PMXR=8 000, PMXC=30 000, PMXL=16)
CIXNX         PARAMETER (PMXR=8 000, PMXC=25 000, PMXL=16)
CISUN4        PARAMETER (PMXR=10000, PMXC=20 000, PMXL=16)
C ========================================================================
      PARAMETER (PMXNAM=1200000)
      PARAMETER (PMXIND=3300000)
      PARAMETER (PMXVAL=5200000)
      PARAMETER (PMXBAS=PMXIND)
C
C        DECLARATIONS OF PRIMARY ARRAYS
C       ================================
       CHARACTER*1 NAMERC(-16:PMXNAM)
C                          :..........THIS ALLOWS 0TH NAME (BLANK)
      INTEGER     INDEX(PMXIND)
      INTEGER     BASE(PMXBAS)
      DOUBLE PRECISION ZVALUE(PMXVAL/2)
C BASE NAMES ARE MAX POSSIBLE LENGTH (16 CHARS)
      CHARACTER*16 PRBNAM,OBJNAM,RHSNAM,RNGNAM,BNDNAM,SOLST,SOLNAM
C ==========================  COMMONs ============================
      COMMON/GNAME/PRBNAM,OBJNAM,RHSNAM,RNGNAM,BNDNAM,SOLST,SOLNAM,
     1             NAMERC
      COMMON/GINDEX/INDEX
      COMMON/GVALUE/ZVALUE,VTOLAB,VTOLRE,VINF
C ================================================================
C SCALAR VALUES PASSED IN COMMON:
C       VTOLAB = ABSOLUTE TOLERANCE
C       VTOLRE = RELATIVE TOLERANCE
C       VINF   = INFINITY
C
      REAL         VALUE(0:PMXVAL)
      EQUIVALENCE (VALUE(0),ZVALUE(1))
C INTEGER ADDRESSING INTO VALUE
      INTEGER    I4VAL(0:PMXVAL)
      INTEGER*2  I2VAL(0:2*PMXVAL+1)
      EQUIVALENCE (VALUE(0),I4VAL(0),I2VAL(0))
C NAME FUNCTION
      CHARACTER*16  NAME
C BASE OF INDEX
      EQUIVALENCE (BASE(1),INDEX(1)),
C BASE IS LONG INTEGER BECAUSE IT MAY CONTAIN VALUES > 32K
C
     1 (IFREE ,BASE(1)),(ENDIND,BASE(2)),(IVFREE,BASE(3)),
     1 (ENDBAS,BASE(4)),(ENDNAM,BASE(5)),(INF   ,BASE(6))
C ...LEAVE ROOM
       EQUIVALENCE
C STATS
     2 (NROWS ,BASE(10)),(NCOLS ,BASE(11)),
     2 (NONZER,BASE(12)),(NVALS ,BASE(13)),(NONES, BASE(14)),
     2 (NRFREE,BASE(15)),(NCFIX ,BASE(16)),(NAMELN,BASE(17)),
     2 (OBJNUM,BASE(18)),(RMAXLN,BASE(19)),(CMAXLN,BASE(20)),
     2 (OPT   ,BASE(21)),(OPTMIN,BASE(22)),(OPTMAX,BASE(23)),
     2 (STCOMP,BASE(24)),(STBASC,BASE(25))
C ...LEAVE ROOM
       EQUIVALENCE
C POINTERS (BASES) FOR MATRIX AND SOLUTION
     3 (IRNAME,BASE(30)),(ICNAME,BASE(31)),
     3 (IRSOLV,BASE(32)),(ICSOLV,BASE(33)),
     3 (IRLBND,BASE(34)),(ICLBND,BASE(35)),
     3 (IRUBND,BASE(36)),(ICUBND,BASE(37)),
     3 (IRSTAT,BASE(38)),(ICSTAT,BASE(39)),
     4 (IRINFO,BASE(40)),(ICINFO,BASE(41)),
     4 (INONZ ,BASE(42))
C ...LEAVE ROOM
       EQUIVALENCE
C BASIS POINTERS AND STATS
     5 (IPIVOT,BASE(50)),(IRBLST,BASE(51)),(IVBLST,BASE(52)),
     5 (NBLST ,BASE(53)),(NBASNZ,BASE(54)),(NBFILL,BASE(55)),
     5 (NBFTRI,BASE(56)),(NBBTRI,BASE(57)),(NBSPIK,BASE(58)),
     5 (NBLGL ,BASE(59)),(NBKRNL,BASE(60)),
     6 (NBPOSN,BASE(61)),(BCPOSN,BASE(62)),(BCSTAT,BASE(63)),
     6 (FRONT ,BASE(64)),(REAR  ,BASE(65)),(BUCKET,BASE(66)),
     6 (BLPRED,BASE(67)),(BLSUCC,BASE(68)),(NBUCKT,BASE(69)),
     7 (IZBLST,BASE(70))
C EDIT VALUES
       LOGICAL*1 EDREN(4)
       EQUIVALENCE
     1 (EDFREE,BASE(71)),(EDFIX,BASE(72)),(EDROND,  BASE(73)),
     2 (EDREFR,BASE(74)),(EDRED,BASE(75)),(EDREN(1),BASE(76))
C ...LEAVE ROOM
       EQUIVALENCE
C FILE UNITS (DATFIL IS FORMATTED, AND PCKFIL IS UNFORMATTED)
     8 (DATFIL,BASE(80)),(PCKFIL,BASE(81))
C ...LEAVE ROOM
       EQUIVALENCE
C DIMENSION LIMITS
     9 (EBASE2,BASE(90)),(MAXNAM,BASE(91)),(MAXIND,BASE(92)),
     9 (MAXVAL,BASE(93)),(MAXRC ,BASE(94)),(MAXVPL,BASE(95))
C HAVE SPARE BASE FOR GRDPCK AND GRDFPK
      INTEGER       BASE2(89)
      COMMON/GBASE2/BASE2
C
C PIVOT HISTORY
      PARAMETER (PIVMAX=50)
C                     :...MAX # PIVOTS
      INTEGER     PIVIN(PIVMAX),PIVOUT(PIVMAX),PIVNBL(PIVMAX),
     1            PIVST0(PIVMAX)
      LOGICAL*1 PIVSTI(PIVMAX),PIVSTO(PIVMAX)
      COMMON /PIVHST/PIVNUM,PIVIN,PIVOUT,PIVNBL,PIVST0,
     1               PIVSTI,PIVSTO
C
C SPECIAL CHARACTERS
      CHARACTER*1   GMASK,CHARST(4)
      COMMON/GCHARS/GMASK,CHARST
C DEBUG SWITCHES AND PAUSE PARAMS
      LOGICAL*1     SWDBG,SWRDBG
      COMMON/GETDBG/PAUSE0,PAUSE,SWDBG,SWRDBG
C
C               ::: END DCGETMAT :::
