                           More Linear Programs

    A second library of linear programs is in MOREDATA.ARC, which
    can be unpacked by entering A:PKXARC A:MOREDATA (change drive as
    appropriate).  It is wise to put this in a separate subdirectory,
    but it is not essential.  After loading this library, enter
    ANALYZE and use _SETUP, if necessary, to change prefixes for
    EXECUTE, MATRIX, MINOS, and SYNTAX file types.  Then, at the
    ANALYZE prompt, enter EXEC MOREDATA (this will create packed files
    from the matrix and solution files).

    The MOREDATA library contains additional examples not covered in
    the Primer.  One collection consists of infeasible instances of
    a blending model.  The data files begin with BLEND, and they are
    described in MOREBLND.DOC.

    The others are as follows.

    CPMxxxxx...critical path scheduling, where xxxxx is CRASH, TCOST,
      and TIME.  The scenarios differ only in the objective function.
      CRASH minimizes the cost to use crash time to satisfy a completion
      time that cannot be satisfied with only normal time for the tasks.
      TCOST minimizes total crash costs plus a lateness penalty.  TIME
      minimizes total completion time using only normal conditions (no
      crash time).  In each scenario, there is a matrix file and a MINOS
      solution file (suffixes .MAT and .MNS, respectively).  The problem
      name is the same for each scenario, namely CRITPATH, so you must
      specify the scenario name when reading the MINOS solution file -- eg,
      SOL MI CPMTIME after READ M CPMTIME.  The syntax file is the same for
      each scenario (ie, CRITPATH.SYN), so you can READ SYN [CRITPATH].

      These are taken from:

         R.M. Stark and R.H. Mayer, Jr., Quantitative Construction
         Management, Wiley, New York, NY, 1983.

    ELECTRIC is taken from:

         H.J. Greenberg, "An Analysis of Degeneracy," Naval Research
         Logistics Quarterly, 33 (1986), 635-655.

      If you already executed MOREDATA, you can EXEC ELECTRIC to begin an
      exercise in price interpretation.

    FARM is another agricultural application, which is a dynamic model
      based on material in the following reference (which is where
      LANDUSE was taken).

         E.O. Heady and H. Hall, "Applications of Linear and
         Nonlinear Programming Models in Specifying Land Use, Spatial
         Equilibrium and Prices for Agriculture," Economic Models,
         Estimation and Risk Programming, Springer-Verlag, 1969.

    GALENET is an infeasible network analyzed in the following references.

         H.J. Greenberg, "Diagnosing Infeasibility for Min-Cost Network
         Flow Models, Part II: Primal Infeasibility," IMA Journal of
         Mathematics in Business and Industry 4 (1988), 39-50.

         H.J. Greenberg and F.H. Murphy, "Approaches to Diagnosing
         Infeasible Linear Programs," ORSA Journal on Computing 3:3 (1991),
         253-261.

      It comes with matrix, MINOS, syntax and IIS files.

    POLLKOHN is Kohn's air pollution control model, which was one of the
      first.  Although this was in his 1969 PhD thesis at Washington
      University, the best reference is his later book:

         R.E. Kohn, 1978.  A Linear Programming Model for Air Pollution
         Control, The MIT Press, Cambridge, MA.

      Matrix, MINOS and syntax files are included, which is Kohn's Model I
      (pp. 34-37), and the data is for the St. Louis airshed, 1975 (Table
      2-1).

    PRISON is an interesting way to formulate a scheduling problem,
      taken from:

        J.M. Maynard, 1983.  A Linear Programming Model for Scheduling
        Prison Guards, UMAP Module 272, COMAP, Lexington, MA.

      Matrix, MINOS and syntax files are included, and there are scenarios
      described in PRISON.DOC

    PRODIST is a product distribution model, with two scenarios (generated
      by MODLER):  an optimal instance in PRODIST.MAT, and an infeasible
      instance in PRODINF.MAT.  Both have MINOS solution files, PRODIST.MNS
      and PRODINF.MNS, respectively.  Both for the infeasible instance),
      and both use the syntax file PRODIST.SYN.

    REFINFEA is an infeasible variation of the REFINERY LP.  The matrix,
      MINOS solution, and IIS files are included.

    SUPDEMEQ...Supply-Demand Equilibrium Model, generated by MODLER for the
      particular 3x2 instance in SUPDEMEQ.MAT.  The MINOS solution and the
      syntax files are included.

    TRANSRWi...Transportation examples, for i=1,2,3,4.  For each
      scenario there is a matrix file (.MAT) and a MINOS solution file
      (.MNS).  The problem name in each scenario is the same (namely,
      TRANSRW), so you must specify the case name when reading the MINOS
      solution file -- eg, SOL MI TRANSRW1 after READ M TRANSRW1.  The
      syntax file for each case is TRANSRW.SYN, so you can READ S
      (without filespec).  The cases are taken from:

         D.S. Rubin and H.M. Wagner, "Shadow Prices:  Tips and Traps
         for Managers," Interfaces 20:4 (1990), 150-157.

      TRANSRW1 has uniquely    optimal flows and unique      dual prices.
      TRANSRW2 has alternative optimal flows and unique      dual prices.
      TRANSRW3 has uniquely    optimal flows and alternative dual prices.
      TRANSRW4 has alternative optimal flows and alternative dual prices.

      You might look at TRANSRW.EXC, which writes LP values (including
      solution) to a file from each of the 4 packed files.

    WATERPOL...Water pollution control, taken from:

         G.W. Graves, G.B. Hatfield and A. Whinston, "Water Pollution
         Control Using By-Pass Piping," Water Resources Research, 5:1
         (1969), 13-47.

    You are encouraged to navigate through these linear programs and answer
    analysis questions similar to what is done in the User's Guide.  For
    the infeasible cases, try debugging them (see MOREBLND.DOC for more
    information about the blending cases).  For the others, which are
    optimal instances, interpret the solution values, including the dual
    prices.
