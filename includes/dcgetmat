!  $Header: M:/default/includes/RCS/dcgetmat,v 1.6 2016/08/24 14:27:43 dsa Exp $
!                 ::: DCGETMAT  8-30-93 :::
!
! LAST DATES: 3-26-92...REDUCED PMXIND FROM 18000 TO 15000 FOR DOS
!                       ADDED BUCKET TO BASIS POINTERS IN BASE
!             8-29-92...INCREASED DIMENSIONS FOR VAX (=AIX) AND LAHEY
!            10-02-92...ADDED STCOMP, STBASC
!             3-12-93...ADDED PIVOT ARRAYS
!             4-08-93...REMOVED CI' (HALF-WORD INTEGERS)
!                       REVISED SOME DIMENSIONS AND ADDED EIA
!                       (SEE GETDATA.DOC)
!             8-07-93...REMOVED ENVCHK
!
! THIS FILE CONTAINS DATA DECLARATIONS AND COMMON BLOCKS FOR GETMAT
! ...IT MUST BE EDITED (SEE INSTALL.DOC) BEFORE COMPILING.
!
!    NAMERC  HOLDS ROW/COLUMN NAMES (FIXED, BUT MAY BE UP 16 CHARS EACH)
!       INDEX   HOLDS INDEXES, POINTERS AND STATS
!       VALUE   HOLDS (REAL) VALUES...POOL IS FIRST
!
! SEE GETDATA.DOC FOR DOCUMENTATION OF DATA STRUCTURE.
!
! ......................................................................
! : NOTE: THIS CONFLICTS WITH DCANAL, SO THEY MUST NOT BE USED TOGETHER.
! :.....................................................................
!
!                   HERE IS WHERE DIMENSIONS ARE SET
!                   ================================
!               PMXNAM = LENGTH OF NAMERC ARRAY (BYTES)
!               PMXIND = LENGTH OF INDEX ARRAY  (WORDS)
!               PMXVAL = LENGTH OF VALUE ARRAY  (WORDS)
!
! QUICK ESTIMATE (SEE GETDATA.DOC):
!       PMXNAM = 8*(R+C), PMXIND = 25R + 16C, PMXVAL = 40R + 4C
! (R=ROWS, C=COLS).
! ======================================================================
!LAHEY       PARAMETER (PMXNAM= 15 000,PMXIND= 30 000,PMXVAL=   10 000)
!IVAX        PARAMETER (PMXNAM=200 000,PMXIND=900 000,PMXVAL=  900 000)
!oldeia PARAMETER (PMXNAM=700 000,PMXIND=1 000 000,PMXVAL=900 000)
!olddef PARAMETER (PMXNAM=800 000,PMXIND=1 600 000,PMXVAL=2000000)
        PARAMETER (PMXNAM=9000000,PMXIND=36000000,PMXVAL=250000000)
!I$          PARAMETER (PMXNAM=300 000,PMXIND=  600 000,PMXVAL=300 000)
!KET        PARAMETER (PMXNAM=300 000,PMXIND=  600 000,PMXVAL=  300 000)
!ICMS        PARAMETER (PMXNAM=400 000,PMXIND=  800 000,PMXVAL=450 000)
!IXNX        PARAMETER (PMXNAM=200 000,PMXIND= 460 000,PMXVAL=  64 000)
!ISUN4       PARAMETER (PMXNAM=480 000,PMXIND=1440 000,PMXVAL=1440 000)
! ======================================================================
        PARAMETER (PMXBAS=PMXIND)
!
!        DECLARATIONS OF PRIMARY ARRAYS
!       ================================
       CHARACTER*1 NAMERC(-16:PMXNAM)
!                          :..........THIS ALLOWS 0TH NAME (BLANK)
      INTEGER     INDEX(PMXIND)
      INTEGER     BASE(PMXBAS)
      DOUBLE PRECISION ZVALUE(PMXVAL/2)
! BASE NAMES ARE MAX POSSIBLE LENGTH (16 CHARS)
      CHARACTER*16 PRBNAM,OBJNAM,RHSNAM,RNGNAM,BNDNAM,SOLST,SOLNAM
! ==========================  COMMONS ============================
      COMMON/GNAME/PRBNAM,OBJNAM,RHSNAM,RNGNAM,BNDNAM,SOLST,SOLNAM, &
                   NAMERC
      COMMON/GINDEX/INDEX
      COMMON/GVALUE/ZVALUE,VTOLAB,VTOLRE,VINF
! ================================================================
! SCALAR VALUES PASSED IN COMMON:
!       VTOLAB = ABSOLUTE TOLERANCE
!       VTOLRE = RELATIVE TOLERANCE
!       VINF   = INFINITY
!
      REAL         VALUE(0:PMXVAL)
      EQUIVALENCE (VALUE(0),ZVALUE(1))
! INTEGER ADDRESSING INTO VALUE
      INTEGER    I4VAL(0:PMXVAL)
      INTEGER*2  I2VAL(0:2*PMXVAL+1)
      EQUIVALENCE (VALUE(0),I4VAL(0),I2VAL(0))
! NAME FUNCTION
      CHARACTER*16  NAME
! BASE OF INDEX
      EQUIVALENCE (BASE(1),INDEX(1)),&
! BASE IS LONG INTEGER BECAUSE IT MAY CONTAIN VALUES > 32K
       (IFREE ,BASE(1)),(ENDIND,BASE(2)),(IVFREE,BASE(3)), &
       (ENDBAS,BASE(4)),(ENDNAM,BASE(5)),(INF   ,BASE(6))
! ...LEAVE ROOM
       EQUIVALENCE &
! STATS
       (NROWS ,BASE(10)),(NCOLS ,BASE(11)), &
       (NONZER,BASE(12)),(NVALS ,BASE(13)),(NONES, BASE(14)), &
       (NRFREE,BASE(15)),(NCFIX ,BASE(16)),(NAMELN,BASE(17)), &
       (OBJNUM,BASE(18)),(RMAXLN,BASE(19)),(CMAXLN,BASE(20)), &
       (OPT   ,BASE(21)),(OPTMIN,BASE(22)),(OPTMAX,BASE(23)), &
       (STCOMP,BASE(24)),(STBASC,BASE(25))
! ...LEAVE ROOM
       EQUIVALENCE &
! POINTERS (BASES) FOR MATRIX AND SOLUTION
       (IRNAME,BASE(30)),(ICNAME,BASE(31)), &
       (IRSOLV,BASE(32)),(ICSOLV,BASE(33)), &
       (IRLBND,BASE(34)),(ICLBND,BASE(35)), &
       (IRUBND,BASE(36)),(ICUBND,BASE(37)), &
       (IRSTAT,BASE(38)),(ICSTAT,BASE(39)), &
       (IRINFO,BASE(40)),(ICINFO,BASE(41)), &
       (INONZ ,BASE(42))
! ...LEAVE ROOM
       EQUIVALENCE &
! BASIS POINTERS AND STATS
       (IPIVOT,BASE(50)),(IRBLST,BASE(51)),(IVBLST,BASE(52)), &
       (NBLST ,BASE(53)),(NBASNZ,BASE(54)),(NBFILL,BASE(55)), &
       (NBFTRI,BASE(56)),(NBBTRI,BASE(57)),(NBSPIK,BASE(58)), &
       (NBLGL ,BASE(59)),(NBKRNL,BASE(60)), &
       (NBPOSN,BASE(61)),(BCPOSN,BASE(62)),(BCSTAT,BASE(63)), &
       (FRONT ,BASE(64)),(REAR  ,BASE(65)),(BUCKET,BASE(66)), &
       (BLPRED,BASE(67)),(BLSUCC,BASE(68)),(NBUCKT,BASE(69)), &
       (IZBLST,BASE(70))
! ...LEAVE ROOM
       EQUIVALENCE &
! FILE UNITS (DATFIL IS FORMATTED, AND PCKFIL IS UNFORMATTED)
       (DATFIL,BASE(80)),(PCKFIL,BASE(81))
! ...LEAVE ROOM
       EQUIVALENCE &
! DIMENSION LIMITS
       (EBASE2,BASE(90)),(MAXNAM,BASE(91)),(MAXIND,BASE(92)), &
       (MAXVAL,BASE(93)),(MAXRC ,BASE(94)),(MAXVPL,BASE(95))
! HAVE SPARE BASE FOR GRDPCK AND GRDFPK
      INTEGER       BASE2(89)
      COMMON/GBASE2/BASE2
!
! PIVOT HISTORY
      PARAMETER (PIVMAX=50)
!                     :...MAX # PIVOTS
      INTEGER     PIVIN(PIVMAX),PIVOUT(PIVMAX),PIVNBL(PIVMAX), &
                  PIVST0(PIVMAX)
      LOGICAL*1 PIVSTI(PIVMAX),PIVSTO(PIVMAX)
      COMMON /PIVHST/PIVNUM,PIVIN,PIVOUT,PIVNBL,PIVST0, &
                     PIVSTI,PIVSTO
!
! SPECIAL CHARACTERS
      CHARACTER*1   GMASK,CHARST(4)
      COMMON/GCHARS/GMASK,CHARST
! DEBUG SWITCHES AND PAUSE PARAMS
      LOGICAL*1     SWDBG,SWRDBG
      COMMON/GETDBG/PAUSE0,PAUSE,SWDBG,SWRDBG
!
!               ::: END DCGETMAT :::
