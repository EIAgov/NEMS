!  $Header: m:/default/includes/RCS/ncntrl,v 1.11 2012/09/07 16:54:48 dsa Exp $
!  NEMS CONTROL VARIABLES
!  The dimension parameters are &6005PRJ.NEMS.COMMON.PDS.datecode:PARAMETR
!  the user should add the following INCLUDE statement (only not commented out)
!     include(parametr)
!  NEMS CONTROL VARIABLES Parameter
      INTEGER NMODEL
      PARAMETER (NMODEL=13)      ! NUMBER OF MODELS
! MODEL SWITCHES. 1 MEANS "ON", 0 MEANS "OFF"
      INTEGER EXW       !=RUNMOD( 1) EXECUTE WORLD  (INTERNATIONAL)
      INTEGER EXM       !=RUNMOD( 2) EXECUTE MAC    (MACROECONOMIC)
      INTEGER EXR       !=RUNMOD( 3) EXECUTE RESD   (RESIDENTIAL)
      INTEGER EXK       !=RUNMOD( 4) EXECUTE COMM   (COMMERCIAL)
      INTEGER EXI       !=RUNMOD( 5) EXECUTE IND    (INDUSTRIAL)
      INTEGER EXT       !=RUNMOD( 6) EXECUTE TRAN   (TRANSPORTATION)
      INTEGER EXE       !=RUNMOD( 7) EXECUTE UTIL   (UTILITY)
      INTEGER EXC       !=RUNMOD( 8) EXECUTE COAL   (COAL SUPPLY)
      INTEGER EXL       !=RUNMOD( 9) EXECUTE WELL   (OIL AND GAS SUPPLY)
      INTEGER EXG       !=RUNMOD(10) EXECUTE PIPE   (GAS TRANS.& DISTR.)
      INTEGER EXO       !=RUNMOD(11) EXECUTE REFINE (PETROLEUM REFINERY)
      INTEGER EXN       !=RUNMOD(12) EXECUTE RENEW  (RENEWABLES)
      INTEGER EXH       !=RUNMOD(13) EXECUTE Hydrogen
      INTEGER RUNMOD(NMODEL) ! Array holding the NMODEL execution flags above
      INTEGER PRTDBGW   !=PRINT DEBUG IN WORLD  (INTERNATIONAL)
      INTEGER PRTDBGM   !=PRINT DEBUG IN MAC    (MACROECONOMIC)
      INTEGER PRTDBGR   !=PRINT DEBUG IN RESD   (RESIDENTIAL)
      INTEGER PRTDBGK   !=PRINT DEBUG IN COMM   (COMMERCIAL)
      INTEGER PRTDBGI   !=PRINT DEBUG IN IND    (INDUSTRIAL)
      INTEGER PRTDBGT   !=PRINT DEBUG IN TRAN   (TRANSPORTATION)
      INTEGER PRTDBGE   !=PRINT DEBUG IN UTIL   (UTILITY)
      INTEGER PRTDBGC   !=PRINT DEBUG IN COAL   (COAL SUPPLY)
      INTEGER PRTDBGL   !=PRINT DEBUG IN WELL   (OIL AND GAS SUPPLY)
      INTEGER PRTDBGG   !=PRINT DEBUG IN PIPE   (GAS TRANS.& DISTR.)
      INTEGER PRTDBGO   !=PRINT DEBUG IN REFINE (PETROLEUM REFINERY)
      INTEGER PRTDBGN   !=PRINT DEBUG IN RENEW  (RENEWABLES)
      INTEGER PRTDBGH   !=PRINT DEBUG output for hydrogen module (1=yes to more output)

      INTEGER FIRSYR    ! FIRST FORECAST YEAR INDEX (EG. 2)
      INTEGER LASTYR    ! LAST FORECAST YEAR INDEX  (EG. 26)
      INTEGER LASTCALYR ! LAST FORECAST YEAR represented as 4-character year (EG. 2025)
      INTEGER MAXITR    ! MAXIMUM ITERATIONS
      INTEGER IJUMPYR   ! LAST FORECAST YEAR INDEX  (EG. 26) - Replaces MJUMPYR
      INTEGER IJUMPCALYR! LAST FORECAST YEAR represented as 4-character year (EG. 2025) - Replaces JUMPCALYR
      REAL    FRCTOL    ! MINIMUM FRACTIONAL CONVERGENCE TOLERANCE
      REAL    ABSTOL    ! MINIMUM ABSOLUTE CONVERGENCE TOLERANCE
      REAL    RLXPC     ! RELAXATION PERCENTAGE
      REAL    NYRS      ! NUMBER OF GROWTH YEARS
      INTEGER I4SITE    ! FORESIGHT OPTION (1:MYOPIC, 2: ADAPTIVE, 3: PERFECT)
      INTEGER I4SCNT    ! FORESIGHT CONTROL: (1: MAIN, 2: SUBMODULE)
      INTEGER IRELAX    ! OPTION TO RUN HEURISTIC ROUTINE TO SPEED CONVERGENCE
      INTEGER WWOP      ! WORLD OIL PRICE CASE
      INTEGER MMAC      ! MACRO CASE
      INTEGER HISTORY   ! 1990 HISTORY DATA FLAG
      INTEGER MACFDBK   ! MACROECONOMIC FEEDBACK LEVER (1=ON)
      INTEGER ELASSW    ! Elasticity Switch (0->No Elas Calc,1->Calc)
      INTEGER DSMSWTCH  ! DSM SWITCH (0 -> OFF, 1 -> ON) (DEF = 1)
      INTEGER DBDUMP    ! ON->DB DUMP/YR (0->OFF,1->ON) (DEF=0)
      INTEGER MODELON   ! ON->MODS NEVER OFF (0->OFF, 1->ON) (DEF= 0)
      INTEGER ECPSTART  ! START YR FOR ECP MODULE (DEF = 1)

! CONTROL VARIABLES SET IN INTEGRATING MODULE
      INTEGER CURITR    ! CURRENT ITERATIONS
      INTEGER CURIYR    ! CURRENT IYEAR INDEX
      INTEGER CURCALYR  ! Calendar year corresponding to CURIYR
      INTEGER LOOPOP    ! NEMS YEAR LOOPING (1: ONE YEAR AT A TIME, 2: ALL YR)
      INTEGER CTEST     ! OVERALL CONVERGENCE TEST (0: NOT, 1:CONVERGED)
      INTEGER FCRL      ! FINAL CONVERGENCE AND REPORTING LOOP SWITCH (1=ON)
      INTEGER NCRL      ! REPORTING LOOP SWITCH FOR EACH MODEL (1=ON)
      INTEGER CNVTST(NMODEL,MNUMYR) ! CONVERGENCE TEST FLAGS FOR EACH MODEL
      INTEGER ITIMNG    ! TIMING SWITCH (ITIMNG=1 MEANS TIMING ON)
      INTEGER YEARPR    ! FOR REPORTING, YEAR DOLLARS (EG. 1990)
      INTEGER MORDER(NMODEL)  ! HOLDS EXECUTION ORDER OF MODULES
      REAL    SCALPR    ! FOR REPORTING, DEFLATOR, YEARPR $ (EG 1.315)
      COMMON/NCNTRL/EXW,EXM,EXR,EXK,EXI,EXT,EXE,EXC,EXL,EXG,EXO,EXN,EXH, &
       RUNMOD,FIRSYR,LASTYR,LASTCALYR,MAXITR,FRCTOL,ABSTOL,RLXPC,NYRS, &
       I4SITE,I4SCNT,IRELAX,WWOP,MMAC,HISTORY,CURITR, &
       CURIYR,CURCALYR,LOOPOP,CTEST,FCRL,NCRL,MACFDBK,ELASSW, &
       DSMSWTCH,DBDUMP,MODELON,ECPSTART,CNVTST,ITIMNG,YEARPR,SCALPR, &
       MORDER,PRTDBGW,PRTDBGM,PRTDBGR,PRTDBGK,PRTDBGI,PRTDBGT, &
       PRTDBGE,PRTDBGC,PRTDBGL,PRTDBGG,PRTDBGO,PRTDBGN,PRTDBGH,IJUMPYR,IJUMPCALYR
! THE FOLLOWING IS A VARIABLE EQUIVALENCED TO THE ENTIRE COMMON BLOCK.
! IT IS USED WITH THE FILER ROUTINES.  ITS LENGTH MUST EQUAL THE LENGTH
! OF THE COMMON BLOCK AND BE IN SYNC WITH THE FILER DICTIONARY FILE.
      REAL NCNTRL_EQUIV(NMODEL*MNUMYR + 2*NMODEL + 58)
      EQUIVALENCE(NCNTRL_EQUIV(1),EXW)

! GLOBAL CHARACTER VARIABLES
      CHARACTER*16 SCEN                    ! SCENARIO
      CHARACTER*8  DATE                    ! DATE CODE
      CHARACTER*24 SCEN_DATE               ! Scenario '.' Datekey
      CHARACTER*72 COMMENT                 ! COMMENT LINE FROM JOB STREAM
      CHARACTER*6  SUBR_NAMES(NMODEL)      ! SHORT SUBROUTINE NAMES
      CHARACTER*18 SUBR_DESCR(NMODEL)      ! LONG SUBROUTINE NAMES
      CHARACTER*10 FORE_SITE_CNTL(2)       ! DESCRIPTION FOR I4SCNT
      CHARACTER*10 FORE_SITE_TYPE(3)       ! DESCRIPTION FOR I4SITE
      CHARACTER*20 LOOP(2)                 ! DESCRIPTION FOR LOOPOP
      COMMON/NCHAR/SCEN_DATE,SCEN,DATE,COMMENT,SUBR_NAMES,SUBR_DESCR,FORE_SITE_CNTL,FORE_SITE_TYPE,LOOP
      REAL NCHAR_EQ(131)
      EQUIVALENCE(NCHAR_EQ(1),SCEN_DATE)
      

      INTEGER CURIRUN                      ! Current run in cycle
      INTEGER NUMIRUNS                     ! Total requested number of cycled runs
      COMMON /CYCLEINFO/ CURIRUN,NUMIRUNS

      REAL CYC_INF_EQ(2)
      EQUIVALENCE(CYC_INF_EQ(1),CURIRUN)
